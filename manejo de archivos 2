#include <stdio.h>
#include <stdlib.h>
#include <time.h>


int findSmallest(int arr[], int n) {
    int smallest = arr[0];
    for (int i = 1; i < n; i++) {
        if (arr[i] < smallest) {
            smallest = arr[i];
        }
    }
    return smallest;
}


int findLargest(int arr[], int n) {
    int largest = arr[0];
    for (int i = 1; i < n; i++) {
        if (arr[i] > largest) {
            largest = arr[i];
        }
    }
    return largest;
}


float Media(int arr[], int n) {
    float sum = 0;
    for (int i = 0; i < n; i++) {
        sum += arr[i];
    }
    return sum / n;
}


float Mediana(int arr[], int n) {
    if (n % 2 == 1) {
        return arr[n / 2];
    } else {
        return (arr[n / 2 - 1] + arr[n / 2]) / 2.0;
    }
}


int Moda(int arr[], int n) {
    int mode = arr[0];
    int maxCount = 0;

    for (int i = 0; i < n; i++) {
        int count = 0;
        for (int j = 0; j < n; j++) {
            if (arr[j] == arr[i])
                count++;
        }
        if (count > maxCount) {
            maxCount = count;
            mode = arr[i];
        }
    }

    return mode;
}

int main() {
    int i, j, n, temp = 0, bandera = 0;
    srand(time(NULL));
    printf("Act:\t\t\t\t<Manejo de Archivos>\n\n\n");
    printf("-> Cantidad de elementos aleatorios a ordenar del 1 a 30:");
    scanf("%d", &n);
    int lista[n];

    for (i = 0; i < n; i++)
        lista[i] = rand() % 30 + 1; 
    printf("\n");
    printf("Lista sin ordenar: ");
    for (i = 0; i < n; i++)
        printf(" %d ", lista[i]);
    printf("\n\n");

    for (i = 1; i < n; i++) {
        bandera = 0;
        for (j = 0; j < n - i; j++) {
            if (lista[j] > lista[j + 1]) {
                bandera = 1;
                temp = lista[j];
                lista[j] = lista[j + 1];
                lista[j + 1] = temp;
            }
        }
        if (bandera == 0)
            break;
    }
    printf("Lista Ordenada:");
    for (i = 0; i < n; i++)
        printf(" %d ", lista[i]);

    
    int smallest = findSmallest(lista, n);
    int largest = findLargest(lista, n);

    printf("\n\nElemento mas pequenio ---> %d\n\n", smallest);
    printf("Elemento mas grande ---> %d\n", largest);

    
    float media = Media(lista, n);
    float mediana = Mediana(lista, n);
    int moda = Moda(lista, n);

    printf("\nMedia ---> %.2f\n\n", media);
    printf("Mediana --> %.2f\n\n", mediana);
    printf("Moda ---> %d\n\n", moda);
    


int histogram[31] = {0}; 

for (i = 0; i < n; i++) {
    histogram[lista[i]]++;
}

printf("\nHistograma:------\n");
printf("		|\n");
printf("		|\n");
printf("		|\n");
printf("		v\n\n");
for (i = 1; i <= 30; i++) {
    printf("%2d: ", i);
    for (int k = 0; k < histogram[i]; k++) {
        printf("*");
    }
    printf("\n");
}

    return 0;

}
